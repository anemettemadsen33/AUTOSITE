import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'

export function middleware(request: NextRequest) {
  const response = NextResponse.next()

  // Add performance and security headers
  const headers = new Headers(response.headers)

  // Performance headers
  headers.set('X-DNS-Prefetch-Control', 'on')
  headers.set('X-Content-Type-Options', 'nosniff')
  headers.set('X-Frame-Options', 'SAMEORIGIN')
  headers.set('X-XSS-Protection', '1; mode=block')
  headers.set('Referrer-Policy', 'origin-when-cross-origin')

  // Cache static assets aggressively
  if (
    request.nextUrl.pathname.startsWith('/_next/static') ||
    request.nextUrl.pathname.includes('/images/')
  ) {
    headers.set('Cache-Control', 'public, max-age=31536000, immutable')
  }

  // Cache pages for shorter duration
  if (request.nextUrl.pathname.startsWith('/vehicles')) {
    headers.set('Cache-Control', 'public, s-maxage=60, stale-while-revalidate=120')
  }

  return NextResponse.next({
    request: {
      headers,
    },
  })
}

export const config = {
  matcher: [
    /*
     * Match all request paths except for the ones starting with:
     * - api (API routes)
     * - _next/static (static files)
     * - _next/image (image optimization files)
     * - favicon.ico (favicon file)
     */
    '/((?!api|_next/static|_next/image|favicon.ico).*)',
  ],
}
