name: Test Failure Notification

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  issues: write

jobs:
  notify-on-failure:
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        if: env.SLACK_WEBHOOK != ''
        with:
          status: ${{ job.status }}
          text: |
            🔴 Test Failure Alert
            
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Author: ${{ github.actor }}
            
            Check the workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Send Email notification
        uses: dawidd6/action-send-mail@v6
        if: env.MAIL_USERNAME != ''
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "❌ Test Failure: ${{ github.repository }}"
          body: |
            Test failure detected in ${{ github.repository }}
            
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Author: ${{ github.actor }}
            
            Workflow: ${{ github.workflow }}
            Job: ${{ github.job }}
            
            View details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: AutoSite CI/CD
        env:
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}

      - name: Create GitHub issue on repeated failure
        uses: actions/github-script@v7
        if: github.event_name == 'push'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Check if there's already an open issue for this failure
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'ci-failure'
            });
            
            const existingIssue = issues.find(issue => 
              issue.title.includes(context.workflow)
            );
            
            if (!existingIssue) {
              // Create new issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `🔴 CI Failure: ${context.workflow}`,
                body: `## CI/CD Failure Alert
                
                Workflow **${context.workflow}** has failed.
                
                **Details:**
                - Branch: \`${context.ref}\`
                - Commit: ${context.sha}
                - Author: @${context.actor}
                - Run: [View workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
                
                **Actions Required:**
                1. Review the failed workflow
                2. Fix the issue
                3. Close this issue when resolved
                
                This issue was automatically created by the CI/CD system.
                `,
                labels: ['ci-failure', 'bug', 'automated']
              });
            }
