name: Tech Debt Review

on:
  schedule:
    # Run every 2 weeks on Monday at 10 AM UTC
    - cron: '0 10 1,15 * *'
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  tech-debt-review:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Analyze codebase
        id: analysis
        run: |
          mkdir -p tech-debt-reports
          
          # Count TODO, FIXME, HACK comments
          echo "# Tech Debt Analysis" > tech-debt-reports/summary.md
          echo "" >> tech-debt-reports/summary.md
          
          echo "## Code Comments" >> tech-debt-reports/summary.md
          echo "" >> tech-debt-reports/summary.md
          
          TODO_COUNT=$(grep -r "TODO" --include="*.php" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" . 2>/dev/null | wc -l || echo "0")
          FIXME_COUNT=$(grep -r "FIXME" --include="*.php" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" . 2>/dev/null | wc -l || echo "0")
          HACK_COUNT=$(grep -r "HACK" --include="*.php" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" . 2>/dev/null | wc -l || echo "0")
          
          echo "- TODO comments: $TODO_COUNT" >> tech-debt-reports/summary.md
          echo "- FIXME comments: $FIXME_COUNT" >> tech-debt-reports/summary.md
          echo "- HACK comments: $HACK_COUNT" >> tech-debt-reports/summary.md
          echo "" >> tech-debt-reports/summary.md
          
          # List TODO items
          if [ "$TODO_COUNT" -gt 0 ]; then
            echo "### TODO Items" >> tech-debt-reports/summary.md
            echo "\`\`\`" >> tech-debt-reports/summary.md
            grep -rn "TODO" --include="*.php" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" . 2>/dev/null | head -20 >> tech-debt-reports/summary.md || true
            echo "\`\`\`" >> tech-debt-reports/summary.md
            echo "" >> tech-debt-reports/summary.md
          fi
          
          # List FIXME items
          if [ "$FIXME_COUNT" -gt 0 ]; then
            echo "### FIXME Items" >> tech-debt-reports/summary.md
            echo "\`\`\`" >> tech-debt-reports/summary.md
            grep -rn "FIXME" --include="*.php" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" . 2>/dev/null | head -20 >> tech-debt-reports/summary.md || true
            echo "\`\`\`" >> tech-debt-reports/summary.md
            echo "" >> tech-debt-reports/summary.md
          fi
          
          echo "TODO_COUNT=$TODO_COUNT" >> $GITHUB_OUTPUT
          echo "FIXME_COUNT=$FIXME_COUNT" >> $GITHUB_OUTPUT
          echo "HACK_COUNT=$HACK_COUNT" >> $GITHUB_OUTPUT

      - name: Check code complexity
        run: |
          echo "## Code Complexity" >> tech-debt-reports/summary.md
          echo "" >> tech-debt-reports/summary.md
          
          # Count large files (>500 lines)
          LARGE_FILES=$(find . -name "*.php" -o -name "*.ts" -o -name "*.tsx" -o -name "*.js" -o -name "*.jsx" | xargs wc -l 2>/dev/null | awk '$1 > 500 {print}' | wc -l || echo "0")
          
          echo "- Files with >500 lines: $LARGE_FILES" >> tech-debt-reports/summary.md
          echo "" >> tech-debt-reports/summary.md
          
          if [ "$LARGE_FILES" -gt 0 ]; then
            echo "### Large Files (>500 lines)" >> tech-debt-reports/summary.md
            echo "\`\`\`" >> tech-debt-reports/summary.md
            find . -name "*.php" -o -name "*.ts" -o -name "*.tsx" -o -name "*.js" -o -name "*.jsx" | xargs wc -l 2>/dev/null | awk '$1 > 500 {print}' | sort -rn | head -20 >> tech-debt-reports/summary.md || true
            echo "\`\`\`" >> tech-debt-reports/summary.md
          fi

      - name: Create tech debt issue
        uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const reportContent = fs.readFileSync('tech-debt-reports/summary.md', 'utf8');
            
            const todoCount = '${{ steps.analysis.outputs.TODO_COUNT }}';
            const fixmeCount = '${{ steps.analysis.outputs.FIXME_COUNT }}';
            const hackCount = '${{ steps.analysis.outputs.HACK_COUNT }}';
            
            const date = new Date();
            const dateStr = date.toISOString().split('T')[0];
            
            const issueBody = `# ðŸ”§ Tech Debt Review - ${dateStr}
            
            This is an automated bi-weekly review of technical debt in the codebase.
            
            ## Summary
            - TODO comments: ${todoCount}
            - FIXME comments: ${fixmeCount}
            - HACK comments: ${hackCount}
            
            ${reportContent}
            
            ## Recommendations
            
            1. **Prioritize FIXME items**: These usually indicate known bugs or issues
            2. **Review TODO items**: Convert important ones to proper issues
            3. **Refactor large files**: Break down files >500 lines into smaller modules
            4. **Remove HACK comments**: Replace temporary solutions with proper implementations
            
            ## Action Items
            
            - [ ] Review and address critical FIXME items
            - [ ] Create issues for important TODO items
            - [ ] Plan refactoring for complex files
            - [ ] Update documentation
            
            ---
            
            *This review was automatically generated. Review cycle: Every 2 weeks*
            `;
            
            // Close previous tech debt reviews
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'tech-debt,automated'
            });
            
            for (const issue of issues) {
              if (issue.title.includes('Tech Debt Review')) {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
              }
            }
            
            // Create new review issue
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸ”§ Tech Debt Review - ${dateStr}`,
              body: issueBody,
              labels: ['tech-debt', 'automated', 'maintenance']
            });

      - name: Upload tech debt report
        uses: actions/upload-artifact@v4
        with:
          name: tech-debt-report
          path: tech-debt-reports/
          retention-days: 90
