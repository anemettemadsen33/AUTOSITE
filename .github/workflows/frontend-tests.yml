name: Frontend Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: frontend
      run: npm ci --legacy-peer-deps

    - name: Run type checking
      working-directory: frontend
      run: npm run type-check

    - name: Run linting
      working-directory: frontend
      run: npm run lint

    - name: Run tests
      working-directory: frontend
      run: npm test -- --coverage

    - name: Build application
      working-directory: frontend
      run: npm run build

    - name: Upload coverage reports
      uses: codecov/codecov-action@v5
      with:
        files: frontend/coverage/lcov.info
        flags: frontend
        fail_ci_if_error: false

  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: frontend
      run: npm ci --legacy-peer-deps

    - name: Install Playwright Browsers
      working-directory: frontend
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      working-directory: frontend
      run: npm run test:e2e

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30
